{
  "version": 4,
  "terraform_version": "0.14.3",
  "serial": 725,
  "lineage": "92df324c-623b-5361-293f-0c237c798ffd",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "k8s-vnet-fw-external",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "22",
                  "80",
                  "443",
                  "30000-40000"
                ],
                "protocol": "tcp"
              },
              {
                "ports": [],
                "protocol": "icmp"
              }
            ],
            "creation_timestamp": "2021-01-04T04:44:49.856-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": false,
            "id": "projects/gcdeveloper/global/firewalls/k8s-vnet-fw-external",
            "name": "k8s-vnet-fw-external",
            "network": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/global/networks/k8s-vnet-tf",
            "priority": 1000,
            "project": "gcdeveloper",
            "self_link": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/global/firewalls/k8s-vnet-fw-external",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "google_compute_network.k8s-vnet-tf"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "k8s-vnet-fw-internal",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [],
                "protocol": "icmp"
              },
              {
                "ports": [],
                "protocol": "ipip"
              },
              {
                "ports": [],
                "protocol": "tcp"
              },
              {
                "ports": [],
                "protocol": "udp"
              }
            ],
            "creation_timestamp": "2021-01-04T04:44:49.835-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": false,
            "id": "projects/gcdeveloper/global/firewalls/k8s-vnet-fw-internal",
            "name": "k8s-vnet-fw-internal",
            "network": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/global/networks/k8s-vnet-tf",
            "priority": 1000,
            "project": "gcdeveloper",
            "self_link": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/global/firewalls/k8s-vnet-fw-internal",
            "source_ranges": [],
            "source_service_accounts": null,
            "source_tags": [
              "k8s"
            ],
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "google_compute_network.k8s-vnet-tf"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "k8s-vms",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": "gvisor",
          "schema_version": 6,
          "attributes": {
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-minimal-1804-bionic-v20201216",
                    "labels": {},
                    "size": 50,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/zones/us-central1-a/disks/k8s-gvisor"
              }
            ],
            "can_ip_forward": false,
            "cpu_platform": "Intel Haswell",
            "deletion_protection": false,
            "description": "",
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/gcdeveloper/zones/us-central1-a/instances/k8s-gvisor",
            "instance_id": "7847754495845905167",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "n1-standard-2",
            "metadata": null,
            "metadata_fingerprint": "58u0Mob-_pw=",
            "metadata_startup_script": "#!/usr/bin/env bash\n# https://gvisor.dev/docs/user_guide/install\n# https://sbulav.github.io/certifications/cks-gvisor/\n\n# NET PREREQUISITES\ncat \u003c\u003cEOF | sudo tee /etc/modules-load.d/containerd.conf\noverlay\nbr_netfilter\nEOF\n\nsudo modprobe overlay\nsudo modprobe br_netfilter\n\n# Setup required sysctl params, these persist across reboots.\ncat \u003c\u003cEOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf\nnet.bridge.bridge-nf-call-iptables  = 1\nnet.ipv4.ip_forward                 = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nEOF\n\n# Apply sysctl params without reboot\nsudo sysctl --system\n\nsudo apt-get update \u0026\u0026 \\\nsudo apt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common \\\n    vim strace binutils psmisc lsof \n\n\n# Add key for Falco\ncurl -s https://falco.org/repo/falcosecurity-3672BA8F.asc | apt-key add -\necho \"deb https://dl.bintray.com/falcosecurity/deb stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list\n\n## Add Docker's official GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key --keyring /etc/apt/trusted.gpg.d/docker.gpg add -\n\n## Add Docker apt repository.\nsudo add-apt-repository \\\n    \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n    $(lsb_release -cs) \\\n    stable\"\n##\n#### Install containerd\nsudo apt-get update \u0026\u0026 sudo apt-get install -y containerd.io  falco\n\n#### Install gvisor/runsc \ncurl -fsSL https://gvisor.dev/archive.key | sudo apt-key add -\nsudo add-apt-repository \"deb https://storage.googleapis.com/gvisor/releases release main\"\nsudo apt-get update \u0026\u0026 sudo apt-get install -y runsc\n\n## Install kubernetes components\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\ncat \u003c\u003cEOF | sudo tee /etc/apt/sources.list.d/kubernetes.list\ndeb https://apt.kubernetes.io/ kubernetes-xenial main\nEOF\napt-get update -y\napt-get install -y kubelet=1.19.6-00 kubeadm=1.19.6-00 kubectl=1.19.6-00 \napt-mark hold kubelet kubeadm kubectl\nsystemctl enable kubelet \u0026\u0026 systemctl start kubelet\n\n\n#### Setup runsc as runtime for containerd\ncat \u003c\u003cEOF | sudo tee /etc/containerd/config.toml\ndisabled_plugins = [\"restart\"]\n[plugins.linux]\n  shim_debug = true\n[plugins.cri.containerd.runtimes.runsc]\n  runtime_type = \"io.containerd.runsc.v1\"\nEOF\n\nsudo systemctl restart containerd\n\n## setup crictl\nwget https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.13.0/crictl-v1.13.0-linux-amd64.tar.gz\ntar xf crictl-v1.13.0-linux-amd64.tar.gz\nsudo mv crictl /usr/local/bin\ncat \u003c\u003cEOF | sudo tee /etc/crictl.yaml\nruntime-endpoint: unix:///run/containerd/containerd.sock\nEOF\n\ncat \u003c\u003cEOF | sudo tee /etc/default/kubelet\nKUBELET_EXTRA_ARGS=\"--container-runtime=remote --container-runtime-endpoint=/var/run/containerd/containerd.sock --resolv-conf=/run/systemd/resolve/resolv.conf\"\nEOF\n\n#Start falco\nsystemctl enable falco \u0026\u0026 systemctl start falco\n",
            "min_cpu_platform": "",
            "name": "k8s-gvisor",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.68.49.202",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/global/networks/k8s-vnet-tf",
                "network_ip": "10.1.0.4",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/regions/us-central1/subnetworks/subnet-tf-10-1",
                "subnetwork_project": "gcdeveloper"
              }
            ],
            "project": "gcdeveloper",
            "scheduling": [
              {
                "automatic_restart": true,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/zones/us-central1-a/instances/k8s-gvisor",
            "service_account": [
              {
                "email": "536543243977-compute@developer.gserviceaccount.com",
                "scopes": [
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            ],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "k8s",
              "k8s-gvisor"
            ],
            "tags_fingerprint": "CgIEZDt4qzs=",
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "google_compute_network.k8s-vnet-tf",
            "google_compute_subnetwork.subnet-10-1"
          ]
        },
        {
          "index_key": "master",
          "schema_version": 6,
          "attributes": {
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-minimal-1804-bionic-v20201216",
                    "labels": {},
                    "size": 50,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/zones/us-central1-a/disks/k8s-master"
              }
            ],
            "can_ip_forward": false,
            "cpu_platform": "Intel Haswell",
            "deletion_protection": false,
            "description": "",
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/gcdeveloper/zones/us-central1-a/instances/k8s-master",
            "instance_id": "1692241765611778831",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "n1-standard-2",
            "metadata": null,
            "metadata_fingerprint": "M8zgKHx8qXs=",
            "metadata_startup_script": "# (Install Docker CE)\n## Set up the repository:\n### Install packages to allow apt to use a repository over HTTPS\napt-get update -y \u0026\u0026 sudo apt-get install -y \\\napt-transport-https ca-certificates curl software-properties-common gnupg2 vim strace binutils psmisc lsof\n# Add Docker's official GPG key:\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key --keyring /etc/apt/trusted.gpg.d/docker.gpg add -\n# Add the Docker apt repository:\nadd-apt-repository \\\n\"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n$(lsb_release -cs) \\\nstable\"\n# Add key for Falco\ncurl -s https://falco.org/repo/falcosecurity-3672BA8F.asc | apt-key add -\necho \"deb https://dl.bintray.com/falcosecurity/deb stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list\n\n# Install Docker CE\napt-get update \u0026\u0026 sudo apt-get install -y \\\nlinux-headers-$(uname -r) \\\ncontainerd.io=1.2.13-2 \\\ndocker-ce=5:19.03.11~3-0~ubuntu-$(lsb_release -cs) \\\ndocker-ce-cli=5:19.03.11~3-0~ubuntu-$(lsb_release -cs)\ncat \u003c\u003cEOF | sudo tee /etc/docker/daemon.json\n{\n    \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n    \"log-driver\": \"json-file\",\n    \"log-opts\": {\n        \"max-size\": \"100m\"\n        },\n    \"storage-driver\": \"overlay2\"\n}\nEOF\n# Create /etc/systemd/system/docker.service.d\nmkdir -p /etc/systemd/system/docker.service.d\n# Restart Docker\nsystemctl daemon-reload\nsystemctl restart docker\nsystemctl enable docker\n# Install kubelet kubeadm falco etcdctl and kubectl\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\ncat \u003c\u003cEOF | sudo tee /etc/apt/sources.list.d/kubernetes.list\ndeb https://apt.kubernetes.io/ kubernetes-xenial main\nEOF\napt-get update -y\napt-get install -y kubelet=1.19.6-00 kubeadm=1.19.6-00 kubectl=1.19.6-00 etcd-client falco\napt-mark hold kubelet kubeadm kubectl\nsystemctl enable kubelet \u0026\u0026 systemctl start kubelet\n# Start and enable falco\nsystemctl enable falco \u0026\u0026 systemctl start falco\n\n# Initialize cluster with master node\nkubeadm init --kubernetes-version=1.19.6 --pod-network-cidr 10.2.0.0/16 --service-cidr=10.3.0.0/16 \u003e\u003e /var/log/kubeadm-init.log\n# Deploy kube network\nKUBECONFIG=/etc/kubernetes/admin.conf kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml  \u003e\u003e /var/log/kubeadm-init.log\n# Remove taint from master\nKUBECONFIG=/etc/kubernetes/admin.conf kubectl taint nodes --all node-role.kubernetes.io/master-  \u003e\u003e /var/log/kubeadm-init.log\n# Print finish\necho ======Cluster Deployed, now execute --as sudo-- join command \\(listed above\\) on worker node========= \u003e\u003e /var/log/kubeadm-init.log",
            "min_cpu_platform": "",
            "name": "k8s-master",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.66.232.225",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/global/networks/k8s-vnet-tf",
                "network_ip": "10.1.0.3",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/regions/us-central1/subnetworks/subnet-tf-10-1",
                "subnetwork_project": "gcdeveloper"
              }
            ],
            "project": "gcdeveloper",
            "scheduling": [
              {
                "automatic_restart": true,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/zones/us-central1-a/instances/k8s-master",
            "service_account": [
              {
                "email": "536543243977-compute@developer.gserviceaccount.com",
                "scopes": [
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            ],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "k8s",
              "k8s-master"
            ],
            "tags_fingerprint": "f6vp69wOwTo=",
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "google_compute_network.k8s-vnet-tf",
            "google_compute_subnetwork.subnet-10-1"
          ]
        },
        {
          "index_key": "worker-1",
          "schema_version": 6,
          "attributes": {
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-minimal-1804-bionic-v20201216",
                    "labels": {},
                    "size": 50,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/zones/us-central1-a/disks/k8s-worker-1"
              }
            ],
            "can_ip_forward": false,
            "cpu_platform": "Intel Haswell",
            "deletion_protection": false,
            "description": "",
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/gcdeveloper/zones/us-central1-a/instances/k8s-worker-1",
            "instance_id": "1113829934219834127",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "n1-standard-2",
            "metadata": null,
            "metadata_fingerprint": "B6AN0hZ3LFA=",
            "metadata_startup_script": "# (Install Docker CE)\n## Set up the repository:\n### Install packages to allow apt to use a repository over HTTPS\napt-get update -y \u0026\u0026 sudo apt-get install -y \\\napt-transport-https ca-certificates curl software-properties-common gnupg2 vim strace binutils psmisc lsof\n# Add Docker's official GPG key:\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key --keyring /etc/apt/trusted.gpg.d/docker.gpg add -\n# Add the Docker apt repository:\nadd-apt-repository \\\n\"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n$(lsb_release -cs) \\\nstable\"\n# Add key for Falco\ncurl -s https://falco.org/repo/falcosecurity-3672BA8F.asc | apt-key add -\necho \"deb https://dl.bintray.com/falcosecurity/deb stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list\n\n# Install Docker CE\napt-get update \u0026\u0026 sudo apt-get install -y \\\nlinux-headers-$(uname -r) \\\ncontainerd.io=1.2.13-2 \\\ndocker-ce=5:19.03.11~3-0~ubuntu-$(lsb_release -cs) \\\ndocker-ce-cli=5:19.03.11~3-0~ubuntu-$(lsb_release -cs)\ncat \u003c\u003cEOF | sudo tee /etc/docker/daemon.json\n{\n    \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n    \"log-driver\": \"json-file\",\n    \"log-opts\": {\n        \"max-size\": \"100m\"\n        },\n    \"storage-driver\": \"overlay2\"\n}\nEOF\n# Create /etc/systemd/system/docker.service.d\nmkdir -p /etc/systemd/system/docker.service.d\n# Restart Docker\nsystemctl daemon-reload\nsystemctl restart docker\nsystemctl enable docker\n# Install kubelet kubeadm falco etcdctl and kubectl\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\ncat \u003c\u003cEOF | sudo tee /etc/apt/sources.list.d/kubernetes.list\ndeb https://apt.kubernetes.io/ kubernetes-xenial main\nEOF\napt-get update -y\napt-get install -y kubelet=1.19.6-00 kubeadm=1.19.6-00 kubectl=1.19.6-00 etcd-client falco\napt-mark hold kubelet kubeadm kubectl\nsystemctl enable kubelet \u0026\u0026 systemctl start kubelet\n# Start and enable falco\nsystemctl enable falco \u0026\u0026 systemctl start falco\n",
            "min_cpu_platform": "",
            "name": "k8s-worker-1",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "35.225.3.85",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/global/networks/k8s-vnet-tf",
                "network_ip": "10.1.0.2",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/regions/us-central1/subnetworks/subnet-tf-10-1",
                "subnetwork_project": "gcdeveloper"
              }
            ],
            "project": "gcdeveloper",
            "scheduling": [
              {
                "automatic_restart": true,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/zones/us-central1-a/instances/k8s-worker-1",
            "service_account": [
              {
                "email": "536543243977-compute@developer.gserviceaccount.com",
                "scopes": [
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            ],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "k8s",
              "k8s-worker-1"
            ],
            "tags_fingerprint": "kIuh9cL4bPs=",
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "google_compute_network.k8s-vnet-tf",
            "google_compute_subnetwork.subnet-10-1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_network",
      "name": "k8s-vnet-tf",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_create_subnetworks": false,
            "delete_default_routes_on_create": false,
            "description": "",
            "gateway_ipv4": "",
            "id": "projects/gcdeveloper/global/networks/k8s-vnet-tf",
            "ipv4_range": null,
            "name": "k8s-vnet-tf",
            "project": "gcdeveloper",
            "routing_mode": "REGIONAL",
            "self_link": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/global/networks/k8s-vnet-tf",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_subnetwork",
      "name": "subnet-10-1",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2021-01-04T04:44:50.085-08:00",
            "description": "",
            "enable_flow_logs": null,
            "fingerprint": null,
            "gateway_address": "10.1.0.1",
            "id": "projects/gcdeveloper/regions/us-central1/subnetworks/subnet-tf-10-1",
            "ip_cidr_range": "10.1.0.0/16",
            "log_config": [],
            "name": "subnet-tf-10-1",
            "network": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/global/networks/k8s-vnet-tf",
            "private_ip_google_access": false,
            "project": "gcdeveloper",
            "region": "us-central1",
            "secondary_ip_range": [
              {
                "ip_cidr_range": "10.2.0.0/16",
                "range_name": "podips"
              },
              {
                "ip_cidr_range": "10.3.0.0/16",
                "range_name": "serviceips"
              }
            ],
            "self_link": "https://www.googleapis.com/compute/v1/projects/gcdeveloper/regions/us-central1/subnetworks/subnet-tf-10-1",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_network.k8s-vnet-tf"
          ]
        }
      ]
    }
  ]
}
